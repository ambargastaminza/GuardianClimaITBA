## MEN√ö PRINCIPAL - GuardianClimaITBA

import pandas as pd
import csv
import os
from obtener_clima import obtener_clima, guardar_en_historial, mostrar_clima

ARCHIVO_HISTORIAL = 'historial_global.csv'


def consultar_clima_y_guardar(username):
    ciudad = input("Ingres√° el nombre de la ciudad: ").strip()
    datos = obtener_clima(ciudad)

    if datos:
        mostrar_clima(datos)
        guardar_en_historial(username, datos)
        print("‚úÖ Consulta guardada en el historial.")
    else:
        print("‚ùå No se pudo obtener el clima.")


def ver_historial_personal(username):
    print(f"\n--- Historial de consultas de {username} ---")
    if not os.path.exists(ARCHIVO_HISTORIAL):
        print("A√∫n no hay historial disponible.")
        return

    encontrado = False
    with open(ARCHIVO_HISTORIAL, mode='r', newline='') as archivo:
        lector = csv.DictReader(archivo)
        for fila in lector:
            if fila['username'] == username:
                print(f"{fila['fecha_hora']} | {fila['ciudad']} | {fila['temperatura']}¬∞C | {fila['descripcion'].capitalize()}")
                encontrado = True

    if not encontrado:
        print("No se encontraron consultas guardadas para este usuario.")


def estadisticas_globales():
    if not os.path.exists(ARCHIVO_HISTORIAL):
        print("No hay historial para analizar.")
        return

    df = pd.read_csv(ARCHIVO_HISTORIAL)
    print("\n--- Estad√≠sticas Globales ---")
    print("Cantidad total de consultas:", len(df))
    print("Ciudades m√°s consultadas:")
    print(df['ciudad'].value_counts().head(5))
    promedio_temp = df['temperatura'].mean()
    print(f"Temperatura promedio global: {promedio_temp:.1f}¬∞C")

    if input("¬øQuer√©s exportar el historial completo a Excel? (s/n): ").lower() == 's':
        df.to_excel("historial_exportado.xlsx", index=False)
        print("Historial exportado como 'historial_exportado.xlsx'")


def mostrar_info_aplicacion():
    print("\n--- Acerca de Guardi√°nClima ITBA ---")
    print("Guardi√°nClima ITBA es una herramienta pensada para ayudarte a enfrentar el d√≠a con informaci√≥n precisa y relevante.")
    print("Permite consultar el clima en tiempo real, guardar tu historial de b√∫squedas, analizar patrones y obtener consejos √∫tiles de vestimenta usando inteligencia artificial.")
    print("Dise√±ada con foco en la experiencia del usuario, combina programaci√≥n, an√°lisis de datos y tecnolog√≠as actuales para ofrecer una soluci√≥n simple, funcional y con proyecci√≥n real.")
    print("\n¬øC√≥mo se usa?")
    print("- Men√∫ de Acceso: pod√©s iniciar sesi√≥n o registrarte.")
    print("- Men√∫ Principal:")
    print("  1. Consulta del clima y guardado en historial global.")
    print("  2. Visualizaci√≥n del historial personal.")
    print("  3. Estad√≠sticas globales y exportaci√≥n del historial.")
    print("  4. Consejo de vestimenta basado en IA (pr√≥ximamente).")
    print("  5. Informaci√≥n general de la aplicaci√≥n.")
    print("  6. Cierre de sesi√≥n.")
    print("\nüôã Desarrolladores:")
    print("- Barb√°s Delfina\n- Gastaminza √Åmbar\n- Lee Angulo Osmary\n- L√≥pez Antolin Mar√≠a\n- Saldivia Ramiro")
    print("\nü´Ç Equipo de desarrollo:")
    print("Nombre del grupo: [ELEGIR NOMBRE DEL GRUPO]")


def menu_principal(username):
    while True:
        print(f"\n=== Men√∫ Principal - Bienvenido/a, {username} ===")
        print("1. Consultar clima actual y guardar en historial")
        print("2. Ver mi historial personal por ciudad")
        print("3. Ver estad√≠sticas globales y exportar historial")
        print("4. Consejo IA: ¬øC√≥mo me visto hoy?")
        print("5. Acerca de Guardi√°nClima ITBA")
        print("6. Cerrar sesi√≥n")
        opcion = input("Seleccion√° una opci√≥n: ")

        if opcion == '1':
            consultar_clima_y_guardar(username)
        elif opcion == '2':
            ver_historial_personal(username)
        elif opcion == '3':
            estadisticas_globales()
        elif opcion == '4':
            print("[Opci√≥n 4] Consejo IA (a implementar)")
        elif opcion == '5':
            mostrar_info_aplicacion()
        elif opcion == '6':
            print("Cerrando sesi√≥n...")
            break
        else:
            print("Opci√≥n inv√°lida. Intent√° de nuevo.")
